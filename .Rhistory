swirl()
swirl()
install_from_swirl("R Programming")
swil()
swirl()
library("swirl")
swirl()
myfunction <- function (){
x<-rnorm(100)
mean(x)
}
myfunction()
ls()
myfunction()
myfunction()
dir()
source("myfunction1.R")
myfunction()
ls()
source("myfunction1.R")
ls()
second(5)
length(5)
x<-1
print(x)
x
msg <- "hello"
msg
x<-1:20
x
x<-3:20
x
a<-true
a<-"true"
a
b<-vector()
b
c<-2L
c
c-1.1
d<-1/0
d
e<-0/0
e
1/d
attributes(d)
attributes(e)
attributes(b)
x
attributes(x)
y<-c(0.5,0.6)
y
l<-TRUE
a<-1+i
a<-1+0i
b<-2+3i
c<-a+b
c
z<-vector("numeric",10)
z
as.logical(1)
class(x)
class(z)
class(a)
as.character(a)
as.complex(as.character(a))
lst(a,b,c,d)
list(a,b,c,d)
m<-list(a,b,c,d)
m[1]
m[1][2]
A<-matrix(2,3)
A
a
A<-matrix(nrow=2,ncol=3)
A
A[1][2]
A[1][2]=5
dim(A)
attributes(A)
A=4:10
A
A=matrix(4:10)
A
A=matrix(4:10, nrow=2)
A=matrix(5:10, nrow=2)
A
m<-1:10
m
dim(m)<-c(5,2)
m
x<-1:3
y<-10:12
cbind(x,y)
rbind(x,y)
x<-factor(c("male","female","male"))
x
table(x)
unclass(x)
x<-factor(c("male","female","male"),levels("male","female"))
x<-factor(c("male","female","male"),levels=c("male","female"))
x
table(x)
y=NA
is.na(Y)
is.na(y)
data.matrix()
read.table()
x<-data.frame(foo=1:4,bar=c(T,T,F,F))
x
nrow(x)
ncol(x)
y=1:3
names(y)
namex(y)<-c("luka","lovro","vito")
names(y)<-c("luka","lovro","vito")
y
x<-list(a=1,b=2,c=3)
x
help read.table
help(read.table)
y<-data.frame(a=1,b='a')
y
dput(y)
dput(y,file="y.R")
new.y <- dget("y.R")
y
rm(a)
con <- url("http://www.jhsph.edu","r")
x<-readLines(con)
head(x)
x<-4
class(x)
x<-c(4,"a",TRUE)
class(x)
x<-c(1.3.5)
x<-c(1,3,5)
y<-(3,2,10)
rbind(x,y)
y<-c(3,2,10)
rbind(x,y)
x<-list(2,"a","b",TRUE)
x[[2]]
x[2]
x<-1:4
y<-2:3
x+y
class(x+y)
ls()
x<-c(3,5,1,10,12,6)
x[x<6]<-0
x
x<-read.csv("RProg_Quiz1.csv")
x
names(x)
x(nrows=2)
x<-read.csv("RProg_Quiz1.csv",nrows=2)
x
x<-read.csv("RProg_Quiz1.csv")
length(x)
rows(x)
nrow(x)
x<-read.csv("RProg_Quiz1.csv",nrows=152:153)
x<-read.csv("RProg_Quiz1.csv",rows=152:153)
x<-read.csv("RProg_Quiz1.csv",row=152:153)
x<-read.csv("RProg_Quiz1.csv",row=152)
help("read.csv")
x<-read.csv("RProg_Quiz1.csv")
x(152:153)
x[152:153]
x[[152:153]]
x[[152]]
x[152]
x[47,]
x[152,153]
x[152,153,]
x[152,]
x[Ozone=NA]
x["Ozone"=NA]
x[is.na(Ozone)]
is.na(Ozone)
x[is.na(x$Ozone)]
x[x$Ozone<20]
x[x$"Ozone"<20]
x[x$"Ozone"<20,]
x[is.na(x$"Ozone"),]
count(x[is.na(x$"Ozone"),])
nrow(x[is.na(x$"Ozone"),])
mean(x[!is.na(x$"Ozone"),])
nrow(x[!is.na(x$"Ozone"),])
116+37
nrow(x[!is.na(x$"Ozone"),])
nrow(x[!is.na(x$"Ozone"),])
x[!is.na(x$"Ozone"),]
mean(x[!is.na(x$"Ozone"),][["Ozone"]])
x[x$"Ozone">31]
x[x$"Ozone">31,]
x[x$"Ozone">31,x$Temp>90]
x[x$Ozone>31,x$Temp>90]
x[x$Ozone>31 & x$Temp>90,]
mean(x[x$Ozone>31 & x$Temp>90,][["Solar.R"]])
mean(!is.na(x[x$Ozone>31 & x$Temp>90,])[["Solar.R"]])
mean(x[x$Ozone>31 & x$Temp>90,][["Solar.R"]])
mean(x[!is.na(x$Ozone)>31 & !is.na(x$Temp>90),][["Solar.R"]])
mean(!is.na(x[!is.na(x$Ozone)>31 & !is.na(x$Temp>90),])[["Solar.R"]])
!is.na(x[!is.na(x$Ozone)>31 & !is.na(x$Temp>90),])
x(!is.na(x[!is.na(x$Ozone)>31 & !is.na(x$Temp>90),]))
x[!is.na(x[!is.na(x$Ozone)>31 & !is.na(x$Temp>90),])]
mean(x[!is.na(x$Ozone)>31 & !is.na(x$Temp>90),][["Solar.R"]])
x[x$Ozone>31 & x$Temp>90,]
x[!is.na(x$Ozone>31 & x$Temp>90),]
x[x$Ozone>31 & x$Temp>90 & !is.na(Solar.R),]
x[x$Ozone>31 & x$Temp>90 & !is.na(x$Solar.R),]
x[x$Ozone>31 & x$Temp>90,]
x[x$Month=6]
x[x$Month=6,]
x[x$Month==6,]
mean(x[x$Month==6,][["Temp"]])
max(x[x$Month==5,][["Ozone"]])
x[x$Month==5,]
x=[1 2 3 4 5 6]
x=c(1,2,3,4,5,6)
x
x[x<3]
x[[3]]
y=c(x,4)
y
y=list(x,4)
y
y[[1]
]
y[[2]]
x<-matrix(1:6,2,3)
x
x[2]
x[3]
x<-matrix(6:1,2,3)
x
x[1]
x[3]
x[3,2]
x[2,2]
y<-(aard=1:5, aarx = 6:10)
y<-(list(aard=1:5, aarx = 6:10))
y
y$a
y[["a", exact=FALSE]]
x<-c(1,2,NA,4,NA,5)
abd<-is.na(x)
bad<-is.na(x)
x[!bad]
bad
y<-c("a","b",NA,"d",NA,"f")
good<-complete.cases(x,y)
good
x[good]
y[good]
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div=z/my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0.10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
for(i in 1:10) {}
for(i in 1:10) {print(i)}
x<-matrix(1:6,2,3)
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))){
print(x[i,j])
}
}
count <-0
while(count <10) {print(count);count<-count+1}
y <- 3
?rbinom
coin <- rbinom(1,1,0.5)
coin
coin
coin
coin
coin
coin
coin <- rbinom(1,1,0.5)
coin
for (i in 1:1000) {
coin[i] = rbinom(1,1,0.5)
}
summary(coin)
ftable(coin)
for (i in 1:1000000) {
coin[i] = rbinom(1,1,0.5)
}
for (i in 1:1000) {
coin[i] =rbinom(1,1,0.5)
}
for (i in 1:1000) {
coin[i]  <- rbinom(1,1,0.5)
}
rbinom(1,1,0.5)
for (i in 1:1000) {
coin[i]  <- rbinom(1,1,0.5)
}
coin[0] <- 0
coin  <- 1
for (i in 1:1000) {
coin[i]  <- rbinom(1,1,0.5)
}
ftable(coin)
for (i in 1:1000) {
coin[i]  <- rbinom(1,1,0.5)
}
ftable(coin)
count(coin)
i=1
i
i<-1
i++
2
add3 <- function(x,y,z) {
x+y+z
}
add3(1,2,3)
mydata  <- rnorm(100)
sd(mydata)
mydata  <- rnorm(1000)
sd(mydata)
mean(mydata)
?lm
source("complete.R")
source("corr.R")
corr("specdata/", 1000)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
x<-list(a=1:5,b=rnorn(10))
x<-list(a=1:5,b=rnorm(10))
x
lapply(x,mean)
lapply(x,median)
sapply(x,median)
sapply(x,runif)
x<-1:4
sapply(x,runif)
lapply(x,runif)
lapply(x,runif, min=-5, max=5)
ruinf(3)
ruif(3)
runif(3)
x <- list(a=matrix(1:4,2,2),b=matrix(!:6,3,2))
x <- list(a=matrix(1:4,2,2),b=matrix(1:6,3,2))
x
lapply(x,function(elt) elt[,1])
sapply(x,function(elt) elt[,1])
x=1:20
lapply(x,sum)
x=1:20
y=vector(0)
y=vector()
y
for(i in 1:20) {
y[i]=0
}
z=c(1,5,4,6,7,11,19)
y[z]=1
y
tapply(x,y,sum)
tapply(x,y,range)
split(x,y)
lapply(split(x,y),sum)
data <- read.csv(RProg_Quiz1.csv)
getwd()
data <- read.csv("RProg_Quiz1.csv")
head(data)
length(data)
nrow(data)
ncol(data)
s <- split(data,data$Month)
s
lapply(s,colMeans)
sapply(s,colMeans)
apply(s,colMeans)
sapply(s,colMeans)
sapply(s,colMeans,na.rm=TRUE)
f1  <- gl(2,5)
f1  <- gl(5,2)
interaction(f1,f2)
f1  <- gl(2,5)
f2  <- gl(5,2)
interaction(f1,f2)
library(datasets)
data(airquality)
airguality
airquality
data("iris")
?iris
iris
tapply(iris,mean)
head(iris)
s <- split(iris,iris$Species)
s
sapply(s,mean)
sapply(s,mean,na.rm=TRUE)
sapply(s,colMeans,na.rm=TRUE)
s <- split(iris,iris$Species)
s
s[1]
s[2]
lapply(s,colMeans)
sapply(s$virginica, colMeans)
s$virginica
s$virginica$Sepal.Length
mean(s$virginica$Sepal.Length)
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris[, 1:4], 2, mean)
apply(s[, 1:4], 2, mean)
apply(s[, 1:4], mean)
apply(s[, 1:4], colMean)
apply(s[, 1:4], colMeans)
apply(iris, colMeans)
apply(iris, mean)
lapply(iris, mean)
lapply(iris[,1:4], mean)
lapply(s[,1:4], mean)
lapply(s[,1:4], colMeans)
s[,1:4]
s[[,1:4]]
s[,,1:4]
lapply(s$virginica[,1:4], colMeans)
s$virginica
lapply(s$virginica, colMeans)
s$virginica
sapply(s$virginica,mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
head(mtcars)
nrows(mtcars)
nrow(mtcars)
ncol(mtcars)
debug(ls)
?debug
ls
debug(ls)
exit
exit()
ls
ls
setwd("D:\Luka's Documents\Dropbox\Individual courses\Data Science\02 - R Programming\ProgrammingAssignment2")
setwd("D:/Luka's Documents/Dropbox/Individual courses/Data Science/02 - R Programming/ProgrammingAssignment2")
source("cachematrix.R")
View(cacheSolve)
source("cachematrix.R")
L <- matrix(1:4,2,2)
L
makeCacheMatrix(L)
cacheSolve(L)
makeCacheMatrix(L)
L
cacheSolve(L)
set(L)
makeCacheMatrix.set(L)
L <- makeCacheMatrix
L
L <- makeCacheMatrix(x)
L
L$set()
cacheSolve(x)
cacheSolve(L)
x=matrix(1:4,2,2)
cacheSolve(x)
cacheSolve(L)
L <- makeCacheMatrix(x)
x=matrix(1:4,2,2)
L <- makeCacheMatrix(x)
L
cacheSolve(L)
cacheSolve(x)
L
L$set()
L$set(x)
L
cacheSolve(L)
cacheSolve(x)
cacheSolve(L)
cacheSolve(L$get())
cacheSolve(L$get
)
